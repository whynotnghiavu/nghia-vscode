{
  "nghia-link": {
    "prefix": "nghia-link",
    "body": [
      "",
      "try:",
      "    if os.path.exists(link):",
      "        os.remove(link)",
      "        print(f\"\u0110\u00e3 x\u00f3a symlink: {link}\")",
      "    os.symlink(os.path.abspath(path), link)",
      "    print(f\"T\u1ea1o link: {link}\")",
      "except OSError as e:",
      "    print(f\"L\u1ed7i: {e}\")"
    ],
    "description": "nghia-link"
  },
  "nghia_list_set": {
    "prefix": "nghia_list_set",
    "body": [
      "",
      "",
      "print(len(nghia))",
      "nghia = list(set(nghia))",
      "print(len(nghia))"
    ],
    "description": "nghia_list_set"
  },
  "nghia_main": {
    "prefix": "nghia_main",
    "body": [
      "if __name__ == \"__main__\":",
      "    main()"
    ],
    "description": "nghia_main"
  },
  "nghia_print": {
    "prefix": "nghia_print",
    "body": [
      "print(f\"ðŸš€ {nghia}\")"
    ],
    "description": "nghia_print"
  },
  "nghia_print_green": {
    "prefix": "nghia_print_green",
    "body": [
      "print(f\"ðŸš€ \\033[32m{nghia}\\033[0m\")"
    ],
    "description": "nghia_print_green"
  },
  "nghia_requirements": {
    "prefix": "nghia_requirements",
    "body": [
      "import subprocess",
      "",
      "with open('requirements1.txt', 'w') as file:",
      "    subprocess.run(['pip', 'freeze'], stdout=file)"
    ],
    "description": "nghia_requirements"
  },
  "nghia_tqdm": {
    "prefix": "nghia_tqdm",
    "body": [
      "from tqdm import tqdm",
      "import time",
      "",
      "items = ['item1', 'item2', 'item3', 'item4', 'item5']",
      "",
      "for item in tqdm(items):",
      "    time.sleep(0.1)",
      "    print(f\"{\"nghia\"}\")"
    ],
    "description": "nghia_tqdm"
  }
}